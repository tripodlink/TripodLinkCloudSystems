<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <RootNamespace>Cloud_IMS_App</RootNamespace>
    <UserSecretsId>0b807632-96a9-4be0-a883-eed672080693</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AngularJS.Core" Version="1.7.9" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.1" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="2.1.8" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="2.1.8" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="2.1.8">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Primitives" Version="3.1.2" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.1.0" />
    <PackageReference Include="MySql.Data.EntityFrameworkCore" Version="8.0.19" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\classes\data-dictionary\IitemGroupClass.ts" />
    <None Remove="ClientApp\src\app\classes\data-dictionary\ItemMaster\IitemMasterClass.ts" />
    <None Remove="ClientApp\src\app\classes\data-dictionary\Manufacturer\IManufacturerClass.ts" />
    <None Remove="ClientApp\src\app\classes\ISupplierClass.ts" />
    <None Remove="ClientApp\src\app\classes\UserAccount.ts" />
    <None Remove="ClientApp\src\app\dictionary\unit-code\unitCode.component.ts" />
    <None Remove="ClientApp\src\app\services\UserAuthorization.service.ts" />
    <None Remove="ClientApp\src\app\services\UserGroup.service.ts" />
    <None Remove="ClientApp\src\vali-css\all.css" />
    <None Remove="ClientApp\src\vali-css\all.min.css" />
    <None Remove="ClientApp\src\vali-css\font-awesome.min.css" />
    <None Remove="ClientApp\src\vali-css\fontawesome.css" />
    <None Remove="ClientApp\src\vali-css\fontawesome.min.css" />
    <None Remove="ClientApp\src\vali-css\main.css" />
    <None Remove="ClientApp\src\vali-js\bootstrap.min.js" />
    <None Remove="ClientApp\src\vali-js\jquery-3.3.1.min.js" />
    <None Remove="ClientApp\src\vali-js\main.js" />
    <None Remove="ClientApp\src\vali-js\plugins\all.js" />
    <None Remove="ClientApp\src\vali-js\plugins\all.min.js" />
    <None Remove="ClientApp\src\vali-js\plugins\bootstrap-datepicker.min.js" />
    <None Remove="ClientApp\src\vali-js\plugins\bootstrap-notify.min.js" />
    <None Remove="ClientApp\src\vali-js\plugins\bootstrap.min.js" />
    <None Remove="ClientApp\src\vali-js\plugins\chart.js" />
    <None Remove="ClientApp\src\vali-js\plugins\dataTables.bootstrap.min.js" />
    <None Remove="ClientApp\src\vali-js\plugins\dropzone.js" />
    <None Remove="ClientApp\src\vali-js\plugins\fullcalendar.min.js" />
    <None Remove="ClientApp\src\vali-js\plugins\jquery-ui.custom.min.js" />
    <None Remove="ClientApp\src\vali-js\plugins\jquery.dataTables.min.js" />
    <None Remove="ClientApp\src\vali-js\plugins\jquery.min.js" />
    <None Remove="ClientApp\src\vali-js\plugins\jquery.vmap.min.js" />
    <None Remove="ClientApp\src\vali-js\plugins\jquery.vmap.sampledata.js" />
    <None Remove="ClientApp\src\vali-js\plugins\jquery.vmap.world.js" />
    <None Remove="ClientApp\src\vali-js\plugins\moment.min.js" />
    <None Remove="ClientApp\src\vali-js\plugins\pace.min.js" />
    <None Remove="ClientApp\src\vali-js\plugins\select2.min.js" />
    <None Remove="ClientApp\src\vali-js\plugins\sweetalert.min.js" />
    <None Remove="ClientApp\src\vali-js\popper.min.js" />
  </ItemGroup>

  <ItemGroup>
    <None Include="Controllers\UnitCodeController.cs" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\CloudImsCommon\CloudImsCommon.csproj" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\classes\data-dictionary\Manufacturer\IManufacturerClass.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\classes\data-dictionary\Supplier\ISupplierClass.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\classes\data-dictionary\ItemGroup\IitemGroupClass.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\classes\data-dictionary\ItemMaster\IitemMasterClass.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\classes\UserAccount.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\dictionary\unit-code\unitCode.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\UserAccount.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\UserAuthorization.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\UserGroup.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\user-management\user-account\user-account.component.ts" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\src\app\classes\user-management\user-profile\" />
    <Folder Include="ClientApp\src\app\classes\user-management\user-group\" />
    <Folder Include="ClientApp\src\app\classes\user-management\user-account\" />
    <Folder Include="ClientApp\src\app\user-management\user-profile\" />
    <Folder Include="ClientApp\src\app\user-management\user-group\" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
